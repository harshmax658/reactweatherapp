{"version":3,"sources":["Components/Weather.jsx","App.js","index.js"],"names":["Weather","useState","city","setCity","search","setSearch","useEffect","url","a","fetch","res","json","resj","console","log","main","data1","className","type","value","onChange","e","target","id","temp","temp_min","temp_max","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OA4CeA,EAzCC,WACZ,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,SAArC,mBAAOG,EAAP,KAAeC,EAAf,KAiBA,OAfAC,qBAAU,WACN,IAAMC,EAAG,2DAAuDH,EAAvD,+BAFA,qCAIE,uCAAG,8BAAAI,EAAA,sEAEQC,MAAMF,GAFd,cAEJG,EAFI,gBAGSA,EAAIC,OAHb,OAGJC,EAHI,OAIVC,QAAQC,IAAIF,EAAKG,MACjBZ,EAAQS,EAAKG,MALH,2CAAH,qDAQXC,KAED,CAACZ,IAGA,mCACI,sBAAKa,UAAU,MAAf,UACI,qBAAKA,UAAU,YAAf,SACI,uBAAOC,KAAK,SAASD,UAAU,aAAaE,MAAOf,EAAQgB,SAAU,SAACC,GAClEhB,EAAUgB,EAAEC,OAAOH,YAGzBjB,EAAsD,qCACpD,sBAAKe,UAAU,OAAf,UACI,qBAAIA,UAAU,WAAd,UAAyB,uBAAMM,GAAG,SAAT,cAAmB,cAAC,IAAD,OAAgCnB,KAC5E,qBAAIa,UAAU,OAAd,UAAsBf,EAAKsB,KAA3B,aACA,qBAAIP,UAAU,cAAd,mBAAmCf,EAAKuB,SAAxC,oBAAgEvB,EAAKwB,SAArE,iBAEJ,qBAAKT,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,mBARV,mBAAGA,UAAU,WAAb,mCCpBVU,MARf,WACE,OACE,mCACA,cAAC,EAAD,OCCJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.52fe53b0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport AccessibilityNewIcon from '@material-ui/icons/AccessibilityNew';\r\nimport axios from 'axios';\r\nconst Weather = () => {\r\n    const [city, setCity] = useState(null);\r\n    const [search, setSearch] = useState('delhi');\r\n    const API_key = `a4a16998b2d5d7273954cd5063f381c0`;\r\n    useEffect(() => {\r\n        const url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=${API_key}`\r\n    \r\n        const data1 = async () => {\r\n\r\n            const res = await fetch(url)\r\n            const resj = await res.json();\r\n            console.log(resj.main)\r\n            setCity(resj.main);\r\n        }\r\n      \r\n        data1();\r\n\r\n    }, [search])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"box\">\r\n                <div className=\"inputData\">\r\n                    <input type=\"search\" className=\"inputFeild\" value={search} onChange={(e) => {\r\n                        setSearch(e.target.value);\r\n                    }} />\r\n                </div>\r\n                {!city ? <p className=\"errorMsg\">`No data Found`</p> : (<>\r\n                    <div className=\"info\">\r\n                        <h2 className=\"location\"><span id=\"street\"> <AccessibilityNewIcon /></span>{search}</h2>\r\n                        <h1 className=\"temp\">{city.temp}°Cel</h1>\r\n                        <h3 className=\"tempmin_max\">Min : {city.temp_min} °Cel | Max : {city.temp_max} °Cel</h3>\r\n                    </div>\r\n                    <div className=\"wave -one\"></div>\r\n                    <div className=\"wave -two\"></div>\r\n                    <div className=\"wave -three\"></div>\r\n                </>)}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default Weather;","import Weather from './Components/Weather'\n\nfunction App() {\n  return (\n    <>\n    <Weather/>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Components/css/style.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}